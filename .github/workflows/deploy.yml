name: "Environment build / deploy"

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      registry:
        required: true
        type: string

jobs:
  deploy_environment:
    name: "Deploy"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Inject environment variables"
        env:
          TPL_PATH: "deploy/${{ inputs.environment }}"
          ECR_URL: ${{ inputs.registry }}/${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_CLOUDFRONT_PUBLIC_KEY: "${{ secrets.AWS_CLOUDFRONT_PUBLIC_KEY_A }}"
          AWS_CLOUDFRONT_PRIVATE_KEY: "${{ secrets.AWS_CLOUDFRONT_PRIVATE_KEY_A }}"
          # AWS_CLOUDFRONT_PUBLIC_KEY_EXPIRING: "${{ secrets.AWS_CLOUDFRONT_PUBLIC_KEY_B }}"
          BASIC_AUTH_USER: ${{ secrets.BASIC_AUTH_USER }}
          BASIC_AUTH_PASS: ${{ secrets.BASIC_AUTH_PASS }}
          INTRANET_JWT: ${{ secrets.INTRANET_JWT }}
          INTRANET_ARCHIVE_SHARED_SECRET: ${{ secrets.INTRANET_ARCHIVE_SHARED_SECRET }}
        run: |
          ## - - - - - - - - - -
          ## CloudFront  - - - -
          ## - - - - - - - - - -

          export AWS_CLOUDFRONT_PUBLIC_KEY_BASE64=$(echo -n "$AWS_CLOUDFRONT_PUBLIC_KEY" | base64 -w 0)
          export AWS_CLOUDFRONT_PRIVATE_KEY_BASE64=$(echo -n "$AWS_CLOUDFRONT_PRIVATE_KEY" | base64 -w 0)
          # export AWS_CLOUDFRONT_PUBLIC_KEY_EXPIRING_BASE64=$(echo -n "$AWS_CLOUDFRONT_PUBLIC_KEY_EXPIRING" | base64 -w 0)


          ## - - - - - - - - - -
          ## Basic Auth  - - - -
          ## - - - - - - - - - -

          BASIC_AUTH_BASE64=""
          
          ## Prevent errors when basic auth isn't used
          ## Nb.the BASIC_AUTH_USER secret in GH production environment should
          ## be set to `no-basic-auth` if not being used
          
          if [ "$BASIC_AUTH_USER" != "no-basic-auth" ]; then
            BASIC_AUTH_BASE64=$(htpasswd -nbm "$BASIC_AUTH_USER" "$BASIC_AUTH_PASS" | base64 -w 0)
          fi
          
          export BASIC_AUTH_BASE64


          ## - - - - - - - - - - -
          ## Perform find/replace
          ## - - - - - - - - - - -

          < "$TPL_PATH"/secret.tpl.yml envsubst > "$TPL_PATH"/secret.yaml
          < "$TPL_PATH"/stateful-set.tpl.yml envsubst > "$TPL_PATH"/stateful-set.yaml
          
          ## Remove template files before apply
          rm "$TPL_PATH"/*.tpl.yml

      - name: "Authenticate to the cluster"
        env:
          KUBE_CERT: ${{ secrets.KUBE_CERT }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
        run: |
          echo "${KUBE_CERT}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${KUBE_TOKEN}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
          kubectl config use-context ${KUBE_CLUSTER}

      - name: "Apply manifest files"
        run: |
          kubectl -n ${KUBE_NAMESPACE} apply -f deploy/${{ inputs.environment }}
