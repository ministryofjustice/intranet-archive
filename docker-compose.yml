volumes:
  node_modules:
  minio_storage:

services:
  spider:
    build:
      context: .
      target: dev
    env_file:
      - .env
    container_name: intranet-archive
    environment:
      ORDINAL_NUMBER: 0
      VIRTUAL_HOST: app.archive.intranet.docker
      VIRTUAL_PORT: "2000"
    volumes:
      - node_modules:/home/node/app/node_modules
      - ./conf/node:/home/node/app
    ports:
      - "2000:2000"
    depends_on:
      minio-init:
        # Wait for minio-init to complete before starting.
        condition: service_completed_successfully

  minio:
    image: minio/minio
    ports:
      - "9010:9000"
      - "9011:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    command: server --console-address ":9001" /data
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 2

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: |
      /bin/sh -c "
        mc config host add intranet-archive http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}
        mc mb --ignore-existing intranet-archive/${S3_BUCKET_NAME} --region eu-west-2
        mc anonymous set download intranet-archive/${S3_BUCKET_NAME};
        exit 0
      "

  cdn:
    image: caddy:2-alpine
    volumes:
      - ./conf/local.Caddyfile:/etc/caddy/Caddyfile
    environment:
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      VIRTUAL_HOST: archive.intranet.docker
      VIRTUAL_PORT: 2019
    depends_on:
      - minio
